Server.java

public class Server {
    private String id;
    private String name;
    private String language;
    private String framework;
    
    public String getId() {
        return id;
    }
    public void setId(String id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String getLanguage() {
        return language;
    }
    public void setLanguage(String language) {
        this.language = language;
    }
    public String getFramework() {
        return framework;
    }
    public void setFramework(String framework) {
        this.framework = framework;
    }
}

ServerController.java

@RestController
public class ServerController {

    @Autowired
    private ServerRepository repository;

    @GetMapping("/servers")
    public List<Server> getAllServers(@RequestParam(required = false) String name) {
        if (name != null) {
            return repository.findByNameContaining(name);
        } else {
            return repository.findAll();
        }
    }

    @GetMapping("/servers/{id}")
    public ResponseEntity<Server> getServerById(@PathVariable(value = "id") String serverId)
            throws ResourceNotFoundException {
        Server server = repository.findById(serverId)
                .orElseThrow(() -> new ResourceNotFoundException("Server not found for this id :: " + serverId));
        return ResponseEntity.ok().body(server);
    }

   
